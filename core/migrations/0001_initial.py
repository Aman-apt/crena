# Generated by Django 5.1.1 on 2025-09-18 13:18

import core.models
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(default=core.models._default_uuid, max_length=84, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('api_token', models.TextField(default=core.models._api_token, verbose_name='')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=core.models._default_uuid, verbose_name='uuid')),
                ('name', models.CharField(max_length=254, verbose_name='name')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('link', models.URLField(blank=True, verbose_name='link')),
                ('origins', models.TextField(default='*', verbose_name='origins')),
                ('statuses', models.CharField(choices=[('AC', 'Active'), ('AR', 'Archived')], db_index=True, default='AC', max_length=2, verbose_name='statuses')),
                ('hide_referrer_regex', models.TextField(blank=True, default='', validators=[core.models._validate_regex], verbose_name='Hide referrer regex')),
                ('respect_dnt', models.BooleanField(default=True, verbose_name='respect dnt')),
                ('ignore_robots', models.BooleanField(default=False, verbose_name='ignore robots')),
                ('collectd_ips', models.BooleanField(default=True, verbose_name='collected ips')),
                ('ignored_ips', models.TextField(blank=True, default='', validators=[core.models._validate_regex], verbose_name='ignored ips')),
                ('script_inject', models.TextField(blank=True, default='', verbose_name='script inject')),
                ('collaborators', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='services', to=settings.AUTH_USER_MODEL, verbose_name='collaborator')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': ['Service'],
                'verbose_name_plural': ['Services'],
                'ordering': ['name', 'uuid'],
            },
        ),
    ]
